name: Only tests
on:
  push:
    branches:
      - main
      - main
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches:
      - main
      - main
    
jobs:
  test:
    name: ${{ matrix.platform }} py${{ matrix.python-version }}
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10']

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # these libraries enable testing on Qt on linux
      - uses: tlambert03/setup-qt-libs@v1

      # these libraries, along with pytest-xvfb (added in the `deps` in tox.ini),
      # enable testing on Qt on linux
      - name: Install Linux libraries
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install -y libdbus-1-3 libxkbcommon-x11-0 libxcb-icccm4 \
            libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 \
            libxcb-xinerama0 libxcb-xinput0 libxcb-xfixes0
        env:
          AWS_EC2_METADATA_DISABLED: true

      # strategy borrowed from vispy for installing opengl libs on windows
      - name: Install Windows OpenGL
        if: runner.os == 'Windows'
        run: |
          git clone --depth 1 https://github.com/pyvista/gl-ci-helpers.git
          powershell gl-ci-helpers/appveyor/install_opengl.ps1

      # note: if you need dependencies from conda, considering using
      # setup-miniconda: https://github.com/conda-incubator/setup-miniconda
      # and
      # tox-conda: https://github.com/tox-dev/tox-conda
      # pip install setuptools tox tox-gh-actions
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest pytest-cookies tox

      - name: Download model unix
        working-directory: src
        if: |
          runner.os == 'Linux' ||
          runner.os == 'Darwin'
        run: |
          if [[ ! -f napari_annotatorj/models/model_real_weights.h5 ]]; then
            wget -q -O models.zip https://github.com/spreka/annotatorj/releases/download/v0.0.2-model/models.zip && unzip models.zip;
          fi

      - name: Download model windows
        working-directory: src
        if: runner.os == 'Windows'
        run: |
          Invoke-WebRequest -uri https://github.com/spreka/annotatorj/releases/download/v0.0.2-model/models.zip -OutFile models.zip && Expand-Archive models.zip -DestinationPath napari_annotatorj/models/

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            src/napari_annotatorj/models

      # this runs the platform-specific tests declared in tox.ini
      #GabrielBB/xvfb-action@v1
      #aganders3/headless-gui@v1
      - name: Test with tox
        #uses: GabrielBB/xvfb-action@v1
        #with:
        #  run: python -m tox
        run: python -m tox
        env:
          PLATFORM: ${{ matrix.platform }}
          AWS_EC2_METADATA_DISABLED: true

      - name: Coverage
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}